require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe '/urgents', type: :request do
  describe 'GET /index' do
    # create test user
    let!(:user) { create(:user) }
    # set headers for authorization
    let(:headers) { valid_headers }
    let(:valid_headers) do
      {
        'Content-Type' => 'application/json',
        'Authorization' => token_generator(user.id)
      }
    end
    let(:invalid_headers) do
      {
        'Authorization' => nil
      }
    end

    # set test valid and invalid urgents
    let!(:urgent) { create_list(:urgent, 10) }

    # get urgents index and return json
    before { get '/urgents', params: {}, headers: headers }

    it 'returns urgents' do
      expect(json).not_to be_empty
      expect(json.size).to eq(10)
    end

    it 'returns status code 200' do
      expect(response).to have_http_status(200)
    end
  end
end
